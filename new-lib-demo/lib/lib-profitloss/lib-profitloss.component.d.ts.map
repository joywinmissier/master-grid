{"version":3,"file":"lib-profitloss.component.d.ts","sources":["lib-profitloss.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, EventEmitter } from '@angular/core';\r\nimport { MatSelect } from '@angular/material/select';\r\nimport { FilterConfiguration } from '../interface/plview.model';\r\nimport { NewLibDemoService } from '../new-lib-demo.service';\r\nexport declare class LibProfitlossComponent implements OnInit {\r\n    private libService;\r\n    constructor(libService: NewLibDemoService);\r\n    tableItems: any[];\r\n    numberOfDuration: number;\r\n    headerName: string;\r\n    lastRowData: any;\r\n    isFirstSticky: boolean;\r\n    isLastSticky: boolean;\r\n    editFields: boolean;\r\n    stickHeader: boolean;\r\n    filterJson: FilterConfiguration;\r\n    resizeColumn: any;\r\n    notifyDataChange: EventEmitter<any>;\r\n    duration: any[];\r\n    rowHeader: any[];\r\n    sampleRow: any[];\r\n    tempData: any;\r\n    columnName: string;\r\n    orderType: string;\r\n    str: string;\r\n    clickedInput: any;\r\n    clickedYear: string;\r\n    clickedName: string;\r\n    previousValue: string;\r\n    count: number;\r\n    changedData: any;\r\n    previousIndex: any;\r\n    deepSortRange: boolean;\r\n    previousList: any;\r\n    someData: any[];\r\n    selectedYear: any[];\r\n    exportingItems: any[];\r\n    updatedTotal: any;\r\n    minAmountRange: any;\r\n    maxAmountRange: any;\r\n    rangeSelection: any;\r\n    selectedValue: string;\r\n    flattenObject: any[];\r\n    dataForExcelSheet: any[];\r\n    priceRangeData: any[];\r\n    priceRange: ({\r\n        min: number;\r\n        max: number;\r\n        range: string;\r\n    } | {\r\n        min: number;\r\n        max: string;\r\n        range: string;\r\n    })[];\r\n    ngOnInit(): void;\r\n    dynamicYears(durationYears: any): void;\r\n    manipulateData(listOfItems: any, start?: number, oldList?: any): void;\r\n    expandRow(item: any): void;\r\n    getSortOrderDetails(event: any): void;\r\n    restFilter(): void;\r\n    resetDropdown(event: any): void;\r\n    editData(editValue: any, list: any, index: any, categoryName: any): void;\r\n    closeEdit(jsonList: any, yearValue: any): void;\r\n    modifyData(jsonList: any, yearValue: any): void;\r\n    exportSelect(chosenRow: any, completed: boolean): void;\r\n    exportData(): void;\r\n    getExcelRowValues(flatData: any): void;\r\n    someComplete(rowItems: any): boolean;\r\n    stopFocus(): void;\r\n    onSearchChange(searchValue: string, nonModifiedData: any): void;\r\n    resetClick(): void;\r\n    getUpdatedTotal(totalValue: any, list: any): any;\r\n    valueChange(yearNames: any, event: any, yearIndex: any): void;\r\n    priceFilter(min: any, max: any, range: any): void;\r\n    clearFilter(): void;\r\n    resetPlaceholder(selectedData: MatSelect): void;\r\n}\r\n"]}